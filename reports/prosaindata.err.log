Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import psycopg2
import pandas as pd
import sys
# Connection parameters, yours will be different
param_dic = {
    "host"      : "localhost",
    "database"  : "prosaindata{2004111001007}",
    "user"      : "postgres",
    "password"  : "123456"
}
def connect(params_dic):
    """ Connect to the PostgreSQL database server """
    conn = None
    try:
        # connect to the PostgreSQL server
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(**params_dic)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
        sys.exit(1) 
    print("Connection successful")
    return conn

def postgresql_to_dataframe(conn, select_query, column_names):
    """
    Tranform a SELECT query into a pandas dataframe
    """
    cursor = conn.cursor()
    try:
        cursor.execute(select_query)
    except (Exception, psycopg2.DatabaseError) as error:
        print("Error: %s" % error)
        cursor.close()
        return 1
    
    # Naturally we get a list of tupples
    tupples = cursor.fetchall()
    cursor.close()
    
    # We just need to turn it into a pandas dataframe
    df = pd.DataFrame(tupples, columns=column_names)
    return df

# Connect to the database
conn = connect(param_dic)

column_names = ['id','sepallength']

df_postLocal = postgresql_to_dataframe(conn, "select * from sepallength", column_names)
df_postLocal
------------------

----- stderr -----
ERROR:root:Internal Python error in the inspect module.
Below is the traceback from this internal error.
----- stdout -----
Connecting to the PostgreSQL database...
could not connect to server: Connection refused
	Is the server running on host "localhost" (127.0.0.1) and accepting
	TCP/IP connections on port 5432?
could not connect to server: Cannot assign requested address
	Is the server running on host "localhost" (::1) and accepting
	TCP/IP connections on port 5432?

Traceback (most recent call last):
  File "<ipython-input-3-dbcf4437872c>", line 17, in connect
    conn = psycopg2.connect(**params_dic)
  File "/usr/local/lib/python3.10/dist-packages/psycopg2/__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: could not connect to server: Connection refused
	Is the server running on host "localhost" (127.0.0.1) and accepting
	TCP/IP connections on port 5432?
could not connect to server: Cannot assign requested address
	Is the server running on host "localhost" (::1) and accepting
	TCP/IP connections on port 5432?


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py", line 3553, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-3-dbcf4437872c>", line 45, in <cell line: 45>
    conn = connect(param_dic)
  File "<ipython-input-3-dbcf4437872c>", line 20, in connect
    sys.exit(1)
SystemExit: 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 1101, in get_records
    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 248, in wrapped
    return f(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py", line 281, in _fixed_getinnerframes
    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))
  File "/usr/lib/python3.10/inspect.py", line 1662, in getinnerframes
    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)
AttributeError: 'tuple' object has no attribute 'tb_frame'
------------------

[0;31m[0m
[0;31mOperationalError[0mTraceback (most recent call last)
[0;32m<ipython-input-3-dbcf4437872c>[0m in [0;36mconnect[0;34m(params_dic)[0m
[1;32m     16[0m         [0mprint[0m[0;34m([0m[0;34m'Connecting to the PostgreSQL database...'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 17[0;31m         [0mconn[0m [0;34m=[0m [0mpsycopg2[0m[0;34m.[0m[0mconnect[0m[0;34m([0m[0;34m**[0m[0mparams_dic[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     18[0m     [0;32mexcept[0m [0;34m([0m[0mException[0m[0;34m,[0m [0mpsycopg2[0m[0;34m.[0m[0mDatabaseError[0m[0;34m)[0m [0;32mas[0m [0merror[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/psycopg2/__init__.py[0m in [0;36mconnect[0;34m(dsn, connection_factory, cursor_factory, **kwargs)[0m
[1;32m    121[0m     [0mdsn[0m [0;34m=[0m [0m_ext[0m[0;34m.[0m[0mmake_dsn[0m[0;34m([0m[0mdsn[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 122[0;31m     [0mconn[0m [0;34m=[0m [0m_connect[0m[0;34m([0m[0mdsn[0m[0;34m,[0m [0mconnection_factory[0m[0;34m=[0m[0mconnection_factory[0m[0;34m,[0m [0;34m**[0m[0mkwasync[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    123[0m     [0;32mif[0m [0mcursor_factory[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mOperationalError[0m: could not connect to server: Connection refused
	Is the server running on host "localhost" (127.0.0.1) and accepting
	TCP/IP connections on port 5432?
could not connect to server: Cannot assign requested address
	Is the server running on host "localhost" (::1) and accepting
	TCP/IP connections on port 5432?


During handling of the above exception, another exception occurred:

[0;31mSystemExit[0mTraceback (most recent call last)
    [0;31m[... skipping hidden 1 frame][0m

[0;32m<ipython-input-3-dbcf4437872c>[0m in [0;36m<cell line: 45>[0;34m()[0m
[1;32m     44[0m [0;31m# Connect to the database[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 45[0;31m [0mconn[0m [0;34m=[0m [0mconnect[0m[0;34m([0m[0mparam_dic[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     46[0m [0;34m[0m[0m

[0;32m<ipython-input-3-dbcf4437872c>[0m in [0;36mconnect[0;34m(params_dic)[0m
[1;32m     19[0m         [0mprint[0m[0;34m([0m[0merror[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 20[0;31m         [0msys[0m[0;34m.[0m[0mexit[0m[0;34m([0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     21[0m     [0mprint[0m[0;34m([0m[0;34m"Connection successful"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mSystemExit[0m: 1

During handling of the above exception, another exception occurred:

[0;31mTypeError[0mTraceback (most recent call last)
    [0;31m[... skipping hidden 1 frame][0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/interactiveshell.py[0m in [0;36mshowtraceback[0;34m(self, exc_tuple, filename, tb_offset, exception_only, running_compiled_code)[0m
[1;32m   2090[0m                     stb = ['An exception has occurred, use %tb to see '
[1;32m   2091[0m                            'the full traceback.\n']
[0;32m-> 2092[0;31m                     stb.extend(self.InteractiveTB.get_exception_only(etype,
[0m[1;32m   2093[0m                                                                      value))
[1;32m   2094[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mget_exception_only[0;34m(self, etype, value)[0m
[1;32m    752[0m         [0mvalue[0m [0;34m:[0m [0mexception[0m [0mvalue[0m[0;34m[0m[0;34m[0m[0m
[1;32m    753[0m         """
[0;32m--> 754[0;31m         [0;32mreturn[0m [0mListTB[0m[0;34m.[0m[0mstructured_traceback[0m[0;34m([0m[0mself[0m[0;34m,[0m [0metype[0m[0;34m,[0m [0mvalue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    755[0m [0;34m[0m[0m
[1;32m    756[0m     [0;32mdef[0m [0mshow_exception_only[0m[0;34m([0m[0mself[0m[0;34m,[0m [0metype[0m[0;34m,[0m [0mevalue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, evalue, etb, tb_offset, context)[0m
[1;32m    627[0m             [0mchained_exceptions_tb_offset[0m [0;34m=[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[1;32m    628[0m             out_list = (
[0;32m--> 629[0;31m                 self.structured_traceback(
[0m[1;32m    630[0m                     [0metype[0m[0;34m,[0m [0mevalue[0m[0;34m,[0m [0;34m([0m[0metb[0m[0;34m,[0m [0mchained_exc_ids[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    631[0m                     chained_exceptions_tb_offset, context)

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1365[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1366[0m             [0mself[0m[0;34m.[0m[0mtb[0m [0;34m=[0m [0mtb[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1367[0;31m         return FormattedTB.structured_traceback(
[0m[1;32m   1368[0m             self, etype, value, tb, tb_offset, number_of_lines_of_context)
[1;32m   1369[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, value, tb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1265[0m         [0;32mif[0m [0mmode[0m [0;32min[0m [0mself[0m[0;34m.[0m[0mverbose_modes[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1266[0m             [0;31m# Verbose modes need a full traceback[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1267[0;31m             return VerboseTB.structured_traceback(
[0m[1;32m   1268[0m                 [0mself[0m[0;34m,[0m [0metype[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mtb[0m[0;34m,[0m [0mtb_offset[0m[0;34m,[0m [0mnumber_of_lines_of_context[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1269[0m             )

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mstructured_traceback[0;34m(self, etype, evalue, etb, tb_offset, number_of_lines_of_context)[0m
[1;32m   1122[0m         [0;34m"""Return a nice text document describing the traceback."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1123[0m [0;34m[0m[0m
[0;32m-> 1124[0;31m         formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,
[0m[1;32m   1125[0m                                                                tb_offset)
[1;32m   1126[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mformat_exception_as_a_whole[0;34m(self, etype, evalue, etb, number_of_lines_of_context, tb_offset)[0m
[1;32m   1080[0m [0;34m[0m[0m
[1;32m   1081[0m [0;34m[0m[0m
[0;32m-> 1082[0;31m         [0mlast_unique[0m[0;34m,[0m [0mrecursion_repeat[0m [0;34m=[0m [0mfind_recursion[0m[0;34m([0m[0morig_etype[0m[0;34m,[0m [0mevalue[0m[0;34m,[0m [0mrecords[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1083[0m [0;34m[0m[0m
[1;32m   1084[0m         [0mframes[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mformat_records[0m[0;34m([0m[0mrecords[0m[0;34m,[0m [0mlast_unique[0m[0;34m,[0m [0mrecursion_repeat[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/IPython/core/ultratb.py[0m in [0;36mfind_recursion[0;34m(etype, value, records)[0m
[1;32m    380[0m     [0;31m# first frame (from in to out) that looks different.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    381[0m     [0;32mif[0m [0;32mnot[0m [0mis_recursion_error[0m[0;34m([0m[0metype[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mrecords[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 382[0;31m         [0;32mreturn[0m [0mlen[0m[0;34m([0m[0mrecords[0m[0;34m)[0m[0;34m,[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    383[0m [0;34m[0m[0m
[1;32m    384[0m     [0;31m# Select filename, lineno, func_name to track frames with[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: object of type 'NoneType' has no len()

